//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.02 at 10:12:42 PM BST 
//


package pl.baczkowicz.mqttspy.common.generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Copyable;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.builder.CopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBCopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBToStringBuilder;


/**
 * <p>Java class for SslSettings complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SslSettings">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Mode" type="{http://baczkowicz.pl/mqtt-spy/common}SslModeEnum"/>
 *         &lt;element name="Protocol" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="CertificateAuthorityFile" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ClientCertificateFile" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ClientKeyFile" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ClientKeyPassword" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Property" type="{http://baczkowicz.pl/mqtt-spy/common}SslProperty" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SslSettings", propOrder = {
    "mode",
    "protocol",
    "certificateAuthorityFile",
    "clientCertificateFile",
    "clientKeyFile",
    "clientKeyPassword",
    "property"
})
public class SslSettings implements CopyTo, Copyable, Equals, HashCode, ToString
{

    @XmlElement(name = "Mode", required = true)
    protected SslModeEnum mode;
    @XmlElement(name = "Protocol")
    protected String protocol;
    @XmlElement(name = "CertificateAuthorityFile")
    protected String certificateAuthorityFile;
    @XmlElement(name = "ClientCertificateFile")
    protected String clientCertificateFile;
    @XmlElement(name = "ClientKeyFile")
    protected String clientKeyFile;
    @XmlElement(name = "ClientKeyPassword")
    protected String clientKeyPassword;
    @XmlElement(name = "Property")
    protected List<SslProperty> property;

    /**
     * Default no-arg constructor
     * 
     */
    public SslSettings() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public SslSettings(final SslModeEnum mode, final String protocol, final String certificateAuthorityFile, final String clientCertificateFile, final String clientKeyFile, final String clientKeyPassword, final List<SslProperty> property) {
        this.mode = mode;
        this.protocol = protocol;
        this.certificateAuthorityFile = certificateAuthorityFile;
        this.clientCertificateFile = clientCertificateFile;
        this.clientKeyFile = clientKeyFile;
        this.clientKeyPassword = clientKeyPassword;
        this.property = property;
    }

    /**
     * Gets the value of the mode property.
     * 
     * @return
     *     possible object is
     *     {@link SslModeEnum }
     *     
     */
    public SslModeEnum getMode() {
        return mode;
    }

    /**
     * Sets the value of the mode property.
     * 
     * @param value
     *     allowed object is
     *     {@link SslModeEnum }
     *     
     */
    public void setMode(SslModeEnum value) {
        this.mode = value;
    }

    /**
     * Gets the value of the protocol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProtocol() {
        return protocol;
    }

    /**
     * Sets the value of the protocol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProtocol(String value) {
        this.protocol = value;
    }

    /**
     * Gets the value of the certificateAuthorityFile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCertificateAuthorityFile() {
        return certificateAuthorityFile;
    }

    /**
     * Sets the value of the certificateAuthorityFile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCertificateAuthorityFile(String value) {
        this.certificateAuthorityFile = value;
    }

    /**
     * Gets the value of the clientCertificateFile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClientCertificateFile() {
        return clientCertificateFile;
    }

    /**
     * Sets the value of the clientCertificateFile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClientCertificateFile(String value) {
        this.clientCertificateFile = value;
    }

    /**
     * Gets the value of the clientKeyFile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClientKeyFile() {
        return clientKeyFile;
    }

    /**
     * Sets the value of the clientKeyFile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClientKeyFile(String value) {
        this.clientKeyFile = value;
    }

    /**
     * Gets the value of the clientKeyPassword property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClientKeyPassword() {
        return clientKeyPassword;
    }

    /**
     * Sets the value of the clientKeyPassword property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClientKeyPassword(String value) {
        this.clientKeyPassword = value;
    }

    /**
     * Gets the value of the property property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SslProperty }
     * 
     * 
     */
    public List<SslProperty> getProperty() {
        if (property == null) {
            property = new ArrayList<SslProperty>();
        }
        return this.property;
    }

    public void toString(ToStringBuilder toStringBuilder) {
        {
            SslModeEnum theMode;
            theMode = this.getMode();
            toStringBuilder.append("mode", theMode);
        }
        {
            String theProtocol;
            theProtocol = this.getProtocol();
            toStringBuilder.append("protocol", theProtocol);
        }
        {
            String theCertificateAuthorityFile;
            theCertificateAuthorityFile = this.getCertificateAuthorityFile();
            toStringBuilder.append("certificateAuthorityFile", theCertificateAuthorityFile);
        }
        {
            String theClientCertificateFile;
            theClientCertificateFile = this.getClientCertificateFile();
            toStringBuilder.append("clientCertificateFile", theClientCertificateFile);
        }
        {
            String theClientKeyFile;
            theClientKeyFile = this.getClientKeyFile();
            toStringBuilder.append("clientKeyFile", theClientKeyFile);
        }
        {
            String theClientKeyPassword;
            theClientKeyPassword = this.getClientKeyPassword();
            toStringBuilder.append("clientKeyPassword", theClientKeyPassword);
        }
        {
            List<SslProperty> theProperty;
            theProperty = this.getProperty();
            toStringBuilder.append("property", theProperty);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new JAXBToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof SslSettings)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        final SslSettings that = ((SslSettings) object);
        equalsBuilder.append(this.getMode(), that.getMode());
        equalsBuilder.append(this.getProtocol(), that.getProtocol());
        equalsBuilder.append(this.getCertificateAuthorityFile(), that.getCertificateAuthorityFile());
        equalsBuilder.append(this.getClientCertificateFile(), that.getClientCertificateFile());
        equalsBuilder.append(this.getClientKeyFile(), that.getClientKeyFile());
        equalsBuilder.append(this.getClientKeyPassword(), that.getClientKeyPassword());
        equalsBuilder.append(this.getProperty(), that.getProperty());
    }

    public boolean equals(Object object) {
        if (!(object instanceof SslSettings)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        hashCodeBuilder.append(this.getMode());
        hashCodeBuilder.append(this.getProtocol());
        hashCodeBuilder.append(this.getCertificateAuthorityFile());
        hashCodeBuilder.append(this.getClientCertificateFile());
        hashCodeBuilder.append(this.getClientKeyFile());
        hashCodeBuilder.append(this.getClientKeyPassword());
        hashCodeBuilder.append(this.getProperty());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public Object copyTo(Object target, CopyBuilder copyBuilder) {
        final SslSettings copy = ((target == null)?((SslSettings) createCopy()):((SslSettings) target));
        {
            SslModeEnum sourceMode;
            sourceMode = this.getMode();
            SslModeEnum copyMode = ((SslModeEnum) copyBuilder.copy(sourceMode));
            copy.setMode(copyMode);
        }
        {
            String sourceProtocol;
            sourceProtocol = this.getProtocol();
            String copyProtocol = ((String) copyBuilder.copy(sourceProtocol));
            copy.setProtocol(copyProtocol);
        }
        {
            String sourceCertificateAuthorityFile;
            sourceCertificateAuthorityFile = this.getCertificateAuthorityFile();
            String copyCertificateAuthorityFile = ((String) copyBuilder.copy(sourceCertificateAuthorityFile));
            copy.setCertificateAuthorityFile(copyCertificateAuthorityFile);
        }
        {
            String sourceClientCertificateFile;
            sourceClientCertificateFile = this.getClientCertificateFile();
            String copyClientCertificateFile = ((String) copyBuilder.copy(sourceClientCertificateFile));
            copy.setClientCertificateFile(copyClientCertificateFile);
        }
        {
            String sourceClientKeyFile;
            sourceClientKeyFile = this.getClientKeyFile();
            String copyClientKeyFile = ((String) copyBuilder.copy(sourceClientKeyFile));
            copy.setClientKeyFile(copyClientKeyFile);
        }
        {
            String sourceClientKeyPassword;
            sourceClientKeyPassword = this.getClientKeyPassword();
            String copyClientKeyPassword = ((String) copyBuilder.copy(sourceClientKeyPassword));
            copy.setClientKeyPassword(copyClientKeyPassword);
        }
        {
            List<SslProperty> sourceProperty;
            sourceProperty = this.getProperty();
            List<SslProperty> copyProperty = ((List<SslProperty> ) copyBuilder.copy(sourceProperty));
            copy.property = null;
            List<SslProperty> uniquePropertyl = copy.getProperty();
            uniquePropertyl.addAll(copyProperty);
        }
        return copy;
    }

    public Object copyTo(Object target) {
        final CopyBuilder copyBuilder = new JAXBCopyBuilder();
        return copyTo(target, copyBuilder);
    }

    public Object createCopy() {
        return new SslSettings();
    }

}
